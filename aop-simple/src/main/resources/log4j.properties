log4j.rootLogger=DEBUG, stdout, logfile,ERROR
# 配置根Logger：设定日志记录的最低级别，
log4j.category.org.springframework=INFO
log4j.category.org.apache=INFO

#输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Threshold=INFO
#：指定日志信息的最低输出级别，默认为DEBUG。
log4j.appender.stdout.ImmediateFlush=true
#表示所有消息都会被立即输出，设为false则不输出，默认值是true。
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#可以灵活自定义布局模式
log4j.appender.stdout.Target=System.out 
#默认值是System.out。
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n   
#设定以怎样的格式显示消息

#日志的输出文件所在目录
log4j.appender.logfile.Append=false：
#true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。
log4j.appender.logfile.Threshold=DEBUG
log4j.appender.logfile.MaxFileSize=100KB
#后缀可以是KB, MB 或者GB。在日志文件到达该大小时，将会自动滚动，即将原来的内容移到logging.log4j.1文件中。
log4j.appender.logfile.MaxBackupIndex=2
#指定可以产生的滚动文件的最大数，例如，设为2则可以产生logging.log4j.1，logging.log4j.2两个滚动文件和一个logging.log4j文件。
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout

log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n
log4j.appender.DAILY.layout=org.apache.log4j.PatternLayout
log4j.appender.RollingFile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
